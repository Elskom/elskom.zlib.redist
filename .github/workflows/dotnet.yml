# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Checkout zlib repository
      uses: actions/checkout@main
      with:
        repository: 'madler/zlib'
        path: './zlib'

    - name: Add msbuild to PATH (Windows).
      uses: microsoft/setup-msbuild@master
      if: runner.OS == 'Windows'

    - uses: actions/setup-dotnet@main
      with:
        dotnet-version: '6.0.x'

    - name: Install packages (Ubuntu)
      if: runner.OS == 'Linux'
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get install gcc-multilib -y
        sudo apt-get install linux-libc-dev-x32-cross linux-libc-dev-amd64-cross -y
        sudo apt-get install gcc-arm-linux-gnueabi linux-libc-dev-armel-cross -y
        sudo apt-get install gcc-aarch64-linux-gnu linux-libc-dev-arm64-cross -y

    - name: Build (Windows)
      if: runner.OS == 'Windows'
      run: |
        msbuild zlibvc.sln -p:Configuration=Release -p:Platform=Win32
        msbuild zlibvc.sln -p:Configuration=Release -p:Platform=x64
        msbuild zlibvc.sln -p:Configuration=Release -p:Platform=ARM
        msbuild zlibvc.sln -p:Configuration=Release -p:Platform=ARM64

    - name: Build (Ubuntu)
      if: runner.OS == 'Linux'
      run: |
        cd zlib
        ./configure
        cd ..
        mkdir linux-x86/
        mkdir linux-x64/
        mkdir linux-arm/
        mkdir linux-arm64/
        gcc -O3 -Wall -m32 -shared -I/usr/x86_64-linux-gnux32/include -I./zlib -Wl,--out-implib,linux-x86/libz.a -o linux-x86/libz.so ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC
        gcc -O3 -Wall -m64 -shared -I/usr/x86_64-linux-gnu/include -I./zlib -Wl,--out-implib,linux-x64/libz.a -o linux-x64/libz.so ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC
        arm-linux-gnueabi-gcc -O3 -Wall -shared -I/usr/arm-linux-gnueabi/include -I./zlib -Wl,--out-implib,linux-arm/libz.a -o linux-arm/libz.so ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC
        aarch64-linux-gnu-gcc -O3 -Wall -shared -I/usr/aarch64-linux-gnu/include -I./zlib -Wl,--out-implib,linux-arm64/libz.a -o linux-arm64/libz.so ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC

    - name: Build (MacOS)
      if: runner.OS == 'MacOS'
      run: |
        cd zlib
        ./configure
        cd ..
        mkdir osx-x64/
        mkdir osx-arm64/
        gcc -O3 -Wall -m64 -dynamiclib -o osx-x64/libz.dylib ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC
        gcc -O3 -Wall -arch arm64 -dynamiclib -o osx-arm64/libz.dylib ./zlib/adler32.c ./zlib/compress.c ./zlib/crc32.c ./zlib/deflate.c ./zlib/gzclose.c ./zlib/gzlib.c ./zlib/gzread.c ./zlib/gzwrite.c ./zlib/infback.c ./zlib/inffast.c ./zlib/inflate.c ./zlib/inftrees.c ./zlib/trees.c ./zlib/uncompr.c ./zlib/zutil.c -fPIC

    - name: Build NuGet Packages
      uses: Elskom/build-dotnet@main
      with:
        SOLUTION_FILE_PATH: 'nuget.sln'
        RESTORE: false
        PUSH: false
